{
  "app_title": "Quantitative Trading System",
  "dashboard": "Dashboard",
  "market": "Market",
  "trade": "Trade",
  "strategy": "Strategy",
  "portfolio": "Portfolio",
  "analysis": "Analysis",
  "settings": "Settings",
  "alerts": "Alerts",
  "account_overview": "Account Overview",
  "total_assets": "Total Assets",
  "available_funds": "Available Funds",
  "investment_amount": "Invested Amount",
  "system_menu": "System Menu",
  "reset_account": "Reset Simulation Account",
  "export_trades": "Export Trade Data",
  "export_trades_btn_label": "Export Trade Data",
  "current_holdings": "Current Holdings",
  "stock_symbol": "Stock Symbol",
  "quantity": "Quantity",
  "current_price": "Current Price",
  "cost_basis": "Cost Basis",
  "market_value": "Market Value",
  "profit_loss": "P/L",
  "profit_loss_pct": "P/L (%)",
  "no_holdings": "No current holdings.",
  "recent_trades": "Recent Trades",
  "time": "Time",
  "direction": "Direction",
  "price": "Price",
  "amount": "Amount",
  "no_trades": "No trade history.",
  "buy": "Buy",
  "sell": "Sell",
  "market_data": "Market Data",
  "enter_stock_symbol": "Enter Stock Symbol",
  "candlestick_chart": "Candlestick Chart",
  "date": "Date",
  "volume": "Volume",
  "market_sentiment": "Market Sentiment",
  "composite_score": "Composite Score",
  "news_sentiment": "News Sentiment",
  "social_sentiment": "Social Sentiment",
  "technical_sentiment": "Technical Sentiment",
  "sentiment_status": "Sentiment Status",
  "last_updated": "Last Updated",
  "market_scan": "Market Scan",
  "scan": "Scan",
  "loading_stock_data": "Loading stock data...",
  "loading_market_indices": "Loading market indices...",
  "loading_stock_details": "Loading stock details...",
  "loading_ml_resource": "Loading machine learning model resource...",
  "ml_predict_tab": "Machine Learning Prediction",
  "select_ml_model": "Select or Enter New Machine Learning Model Name:",
  "select_action": "Select Action:",
  "predict": "Predict",
  "train_model": "Train Model",
  "ml_predict_button": "Execute Prediction",
  "ml_prediction_result": "Prediction Result",
  "ml_prob_up": "Probability Up",
  "ml_confidence": "Confidence",
  "ml_feature_importance": "View Feature Importance",
  "ml_train_tab": "Train New Model / Update Selected",
  "ml_test_split_ratio": "Test Set Ratio:",
  "ml_training_days": "Days of Data for Training:",
  "ml_new_model_name_prompt": "New Model Name (if creating):",
  "ml_train_button_update": "Train & Update '{model_name}'",
  "ml_train_button_new": "Train New Model '{model_name}'",
  "ml_training_in_progress": "Training model '{model_name}' (Data: {symbol}, {days} days)...",
  "ml_training_success": "Model '{model_name}' training completed and saved.",
  "ml_training_failed": "Model training failed: {error}",
  "ml_train_acc": "Training Accuracy",
  "ml_test_acc": "Test Accuracy",
  "ml_samples_used": "Samples Used",
  "ml_new_model_available": "New model '{model_name}' created and saved. You can now select it from the dropdown.",
  "error_loading_model": "Failed to load model '{model_name}'. Check logs.",
  "error_predicting": "Prediction failed: {error}",
  "error_preparing_features": "Feature preparation failed or data insufficient.",
  "error_scaler_not_fitted": "Scaler not initialized (not fitted). Cannot perform transform. Please train the model first.",
  "tech_analysis_tab_title": "Technical Analysis Strategy",
  "tech_select_strategy": "Select Technical Strategy:",
  "ml_strategy_tab_title": "Machine Learning Strategies",
  "tech_analyze_button": "Analyze Technical Signal",
  "tech_current_signal": "Current Signal",
  "tech_reason": "Reason",
  "tech_latest_indicators": "Latest Indicator Values",
  "backtest_tab": "Strategy Backtest",
  "backtest_select_strategy": "Select Strategy:",
  "backtest_initial_capital": "Initial Capital:",
  "backtest_days": "Backtest Data Days:",
  "backtest_commission": "Commission Rate (e.g., 0.0003):",
  "backtest_run_button": "Run Backtest",
  "backtest_results_header": "Backtest Performance Metrics",
  "backtest_final_value": "Final Portfolio Value",
  "backtest_strategy_return": "Strategy Total Return",
  "backtest_buy_hold_return": "Buy & Hold Return",
  "backtest_annual_return": "Annualized Return",
  "backtest_sharpe": "Sharpe Ratio",
  "backtest_max_drawdown": "Max Drawdown",
  "backtest_trades": "Total Trades",
  "backtest_plot_title": "{symbol} - {strategy_name} Strategy Backtest Results",
  "backtest_plot_price_trades": "{symbol} - Price & Trades ({strategy_name})",
  "backtest_plot_equity": "Portfolio Value vs Buy & Hold",
  "backtest_plot_drawdown": "Drawdown",
  "runtime_error": "A system runtime error occurred",
  "error_details": "Error Details",
  "reset_system_button": "Reset System",
  "enable_auto_refresh": "Enable Auto-Refresh",
  "disable_auto_refresh": "Disable Auto-Refresh",
  "refresh_interval_seconds": "Refresh Interval (seconds)",
  "next_refresh_in": "Next refresh in:",
  "seconds_suffix": "seconds",
  "refresh_now": "Refresh Now",
  "auto_refresh_enabled_msg": "Auto-Refresh Enabled",
  "current_time": "Current Time",
  "ui_settings": "UI Settings",
  "select_language_label": "Select Language",
  "no_language_files_found": "No language files found.",
  "mode_local_only": "Local Only (Fastest)",
  "mode_local_then_auto": "Local then Auto-Cache (Recommended)",
  "translation_mode_label": "Translation Mode",
  "online_translator_status": "Online Translator Status",
  "online_translator_available": "Available",
  "online_translator_unavailable": "Unavailable/Init Failed",
  "checking": "Checking...",
  "system_operations": "System Operations",
  "account_reset_success": "Account has been reset.",
  "no_trades_to_export": "No trade data to export.",
  "download_csv_label": "Download CSV File",
  "trade_data_filename_prefix": "trade_data",
  "csv_ready_for_download": "CSV file ready for download.",
  "export_error": "Error exporting data:",
  "market_heatmap": "Market Heatmap",
  "change_pct_label": "Change (%)",
  "market_data_unavailable": "Could not fetch enough market data to generate heatmap.",
  "error_rendering_heatmap": "Error rendering market heatmap.",
  "price_info_for": "{symbol} Price Info",
  "latest_price": "Latest Price",
  "open_price": "Open",
  "high_price": "High",
  "low_price": "Low",
  "warning_display_price": "Issue displaying some price info.",
  "error_rendering_kline": "Could not render Candlestick chart.",
  "warning_kline_data_incomplete": "Cannot render Candlestick: Missing necessary OHLC data.",
  "error_rendering_volume": "Could not render Volume chart.",
  "warning_volume_data_missing": "Cannot render Volume chart: Missing volume data.",
  "error_analyzing_sentiment": "Error analyzing market sentiment.",
  "warning_sentiment_module_missing": "Sentiment analysis module unavailable.",
  "scan_symbols_label": "Stock Symbols (comma-separated)",
  "scan_vol_threshold": "Volume Change Threshold (%)",
  "scan_price_threshold": "Price Change Threshold (%)",
  "scan_lookback_days": "Lookback Days",
  "scanning_market": "Scanning market...",
  "scan_found_matches": "Found {count} matching stocks.",
  "volume_change": "Volume Change (%)",
  "price_change": "Price Change (%)",
  "scan_no_matches": "No stocks found matching the criteria.",
  "error_market_scan_form": "Error processing market scan.",
  "single_trade": "Single Trade",
  "batch_trade": "Batch Trade",
  "order_type": "Order Type",
  "market_order": "Market Order",
  "limit_order": "Limit Order",
  "current_market_price": "Current Market Price",
  "total_trade_amount": "Total Trade Amount",
  "error_insufficient_funds": "Insufficient funds! Need ${needed:.2f}, Available ${available:.2f}",
  "error_insufficient_position": "Insufficient position! Need {needed} shares, Have {available} shares",
  "execute_trade": "Execute Trade",
  "error_limit_price_required": "Limit order requires a specified price.",
  "trade_success_msg": "Trade successful! {direction} {quantity} shares of {symbol} @ ${price:.2f}",
  "trade_failed_msg": "Trade failed: {message}",
  "cost_value": "Cost",
  "warning_batch_trade_unavailable": "Batch trade functionality is unavailable. Check component initialization.",
  "strategy_trading": "Strategy Trading",
  "warning_strategy_manager_load_failed": "Strategy manager failed to load, please check dependencies and logs",
  "info_try_reload": "Try reloading the page or contact system administrator",
  "portfolio_management": "Portfolio Management",
  "holdings_details": "Holdings Details",
  "asset_allocation": "Asset Allocation",
  "cash": "Cash",
  "portfolio_composition": "Portfolio Composition",
  "no_positive_value_assets": "No assets with positive value to display allocation.",
  "error_rendering_pie_chart": "Could not render allocation pie chart.",
  "risk_analysis": "Risk Analysis",
  "max_single_position_ratio": "Max Single Position %",
  "cash_ratio": "Cash Ratio",
  "concentration_score": "Concentration Score",
  "diversification_score": "Diversification Score",
  "portfolio_optimization_suggestions": "Portfolio Optimization Suggestions",
  "portfolio_risk_reasonable": "Portfolio risk profile appears reasonable.",
  "warning_risk_analysis_failed": "Risk analysis failed.",
  "warning_risk_manager_unavailable": "Risk Management module unavailable.",
  "portfolio_history": "Portfolio History",
  "portfolio_analysis": "Portfolio Analysis",
  "warning_analysis_module_unavailable": "Analysis module (PortfolioAnalyzer) not initialized or loaded.",
  "price_alert_system": "Price Alert System",
  "warning_alert_system_unavailable": "Alert system (AlertManager) not initialized or loaded.",
  "settings_ui_unavailable": "Settings UI rendering function not found.",
  "error_system_runtime": "An unhandled error occurred during system runtime.",
  "error_fetching_data_for": "Could not retrieve data for {symbol}.",
  "error_invalid_data_format": "Received data for {symbol} has incorrect or incomplete format.",
  "error_executor_not_ready": "Order Executor is not ready.",
  "unknown": "Unknown",
  "loading_heatmap_data": "Loading heatmap data...",
  "market_data_unavailable_for_heatmap": "Could not fetch enough market data for heatmap (API limits might be hit).",
  "refresh_default_heatmap": "Refresh Default Heatmap",
  "loading_default_heatmap": "Loading default heatmap...",
  "default_view_suffix": " (Default View)",
  "load_full_heatmap": "Load Full Heatmap",
  "loading_full_heatmap": "Loading full heatmap...",
  "full_view_suffix": " (Full View)",
  "click_to_load_heatmap": "Click button to load market heatmap.",
  "load_data_button": "Load {symbol} Data",
  "warning_cannot_get_market_price": "Could not get current market price. Market order might not execute accurately or use default.",
  "calculating": "Calculating...",
  "no_portfolio_history_data": "No portfolio history data available.",
  "recent_trend": "Recent Trend",
  "no_valid_holdings_to_display": "No valid holdings to display.",
  "no_heatmap_data_to_display": "No heatmap data to display.",
  "load_default_heatmap": "Load Default Heatmap", 
    "loading_heatmap_data": "Loading heatmap data...",
    "load_full_heatmap": "Load Full Heatmap",
    "loading_full_heatmap": "Loading full heatmap...",
  
    "click_to_load_heatmap": "Click button to load market heatmap.",

  
    "load_data_button": "Load {symbol} Data", 
  
    "warning_cannot_get_market_price": "Cannot get current market price. Market order may use default or fail.",
  
    "calculating": "Calculating...",
  
    "no_portfolio_history_data": "No portfolio history data available.",
  
    "default_view_suffix": " (Default View)",
  
    "full_view_suffix": " (Full View)",
  
    "no_heatmap_data_to_display": "No heatmap data to display.",
  
    "total_trades_count": "Total Trades", 

  
    "market_data_unavailable_for_heatmap": "Could not fetch enough data for heatmap.",
  
    "recent_trend": "Recent Trend",
  
    "no_valid_holdings_to_display": "No valid holdings to display.",
  
    "portfolio_value_label": "Portfolio Value",
  
    "portfolio_value_history_title": "Portfolio Value History",
  
    "net_value_label": "Net Value ($)",
  
    "error_rendering_history_chart": "Error rendering portfolio history chart.",
    "calculating": "Calculating...",
  "requires_limit_price": "Limit price required",
  "warning_cannot_get_market_price_ui": "Could not fetch current market price. Market order will be executed at best available price or use a default if set.",
  "market_price_determined_on_execution": "Market price (determined at execution)",
  "error_insufficient_funds_ui": "Insufficient funds! Estimated need ${needed:.2f}, Available ${available:.2f}",
  "error_insufficient_position_ui": "Insufficient position! Need {needed} shares, Have {available} shares",
  "error_limit_price_required_ui": "Limit order must have a specified price.",
  "warning_stock_symbol_required": "Please enter a stock symbol.",
  "execute_trade_button": "Execute Trade",
  "error_cannot_submit_trade": "Cannot submit trade, please check form errors.",
  "trade_success_msg_ui": "Trade successful! {direction} {quantity} shares of {symbol} @ executed price ${price:.2f}",
  "trade_failed_msg_ui": "Trade failed: {message}",
  "load_data_button": "Load {symbol} Data",
  "recent_trend": "Recent Trend",
  "portfolio_value_label": "Portfolio Value",
  "portfolio_value_history_title": "Portfolio Value History",
  "net_value_label": "Net Value ($)",
  "no_portfolio_history_data": "No portfolio history data available for plotting.",
  "error_rendering_history_chart": "Could not render portfolio history chart.",
  "error_rendering_dashboard": "Error rendering dashboard.",
  "error_rendering_settings": "Error rendering settings UI.",
  "error_rendering_analysis_tab": "Error rendering analysis tab:",
  "error_rendering_alerts_tab": "Error rendering alerts tab:",
  "settings": "System Settings", 
  "alerts": "Alerts",
  "portfolio_analysis": "Portfolio Analysis", 
  "price_alert_system": "Price Alert System",
  "trade_analysis_subheader": "Trade Analysis",
  "no_completed_trades_for_analysis": "No completed trades available for metric analysis.",
  "raw_trade_records_subheader": "Raw Trade Records",
  "no_raw_trades_records": "No raw trade records available.",
  "trade_statistics_title": "Trade Statistics",
  "total_trades_metric": "Total Trades",
  "win_rate_metric": "Win Rate",
  "avg_profit_metric": "Avg. Profit",
  "avg_loss_metric": "Avg. Loss",
  "profit_loss_ratio_metric": "Profit/Loss Ratio",
  "na_value": "N/A",
  "profit_factor_metric": "Profit Factor",
  "largest_win_metric": "Largest Win",
  "largest_loss_metric": "Largest Loss",
  "completed_trades_details_subheader": "Completed Trade Details",
  "col_completed_symbol": "Symbol",
  "col_completed_quantity": "Quantity",
  "col_completed_buy_price": "Buy Price",
  "col_completed_sell_price": "Sell Price",
  "col_completed_profit_loss": "P/L",
  "col_completed_profit_loss_pct": "P/L %",
  "col_completed_sell_time": "Sell Time",
  "no_completed_trades_to_display": "No completed trades to display.",
  "no_completed_trades_records": "No completed trade records.",
  "col_raw_time": "Time",
  "col_raw_stock": "Stock",
  "col_raw_direction": "Direction",
  "col_raw_quantity": "Quantity",
  "col_raw_price": "Price",
  "col_raw_total_amount": "Total Amount",
  "no_raw_trades_to_display": "No raw trades to display.",
  "portfolio_analysis_header": "Portfolio Analysis",
  "error_performing_portfolio_analysis": "Error performing portfolio analysis.",
  "error_creating_analysis_tabs": "Error creating analysis tabs.",
  "overview": "Overview",
  "returns_performance": "Returns Performance",
  "trade_records": "Trade Records",
  "asset_allocation_config": "Asset Allocation",

  "portfolio_overview_subheader": "Portfolio Overview",
  "total_asset_value_metric": "Total Asset Value",
  "cash_metric": "Cash",
  "invested_value_metric": "Invested Value",
  "position_count_metric": "Position Count",
  "individual_stock_performance_subheader": "Individual Stock Performance",
  "col_stock": "Stock",
  "col_quantity": "Quantity",
  "col_current_price": "Current Price",
  "col_cost_basis": "Cost Basis",
  "col_market_value": "Market Value",
  "col_weight": "Weight",
  "col_profit_loss": "P/L",
  "col_profit_loss_pct": "P/L %",
  "col_trade_count": "Trades",
  "col_win_rate": "Win Rate",
  "no_holdings_for_performance": "No current holdings to analyze individual performance.",
  "trade_summary_subheader": "Trading Summary",
  "total_trades_metric": "Total Trades",
  "win_trades_metric": "Winning Trades",
  "loss_trades_metric": "Losing Trades",

  "returns_analysis_subheader": "Returns Performance Analysis",
  "insufficient_data_for_returns": "Insufficient data for returns analysis.",
  "annualized_return_metric": "Annualized Return",
  "avg_daily_return_metric": "Avg. Daily Return",
  "portfolio_equity_curve_subheader": "Portfolio Equity Curve",
  "warning_equity_curve_data_inconsistent": "Data inconsistent or empty, cannot plot equity curve.",
  "equity_curve_legend": "Equity Curve",
  "portfolio_equity_curve_title": "Portfolio Equity Curve",
  "date_axis": "Date",
  "net_value_axis": "Net Value",
  "monthly_returns_heatmap_subheader": "Monthly Returns Heatmap",
  "month_1": "Jan", "month_2": "Feb", "month_3": "Mar", "month_4": "Apr",
  "month_5": "May", "month_6": "Jun", "month_7": "Jul", "month_8": "Aug",
  "month_9": "Sep", "month_10": "Oct", "month_11": "Nov", "month_12": "Dec",
  "month_axis": "Month",
  "year_axis": "Year",
  "returns_label": "Return",
  "monthly_return_rate_colorbar": "Monthly Return Rate",

  "risk_analysis_subheader": "Risk Analysis",
  "insufficient_data_for_risk": "Insufficient data for risk analysis.",
  "annualized_volatility_metric": "Annualized Volatility",
  "max_drawdown_metric": "Max Drawdown",
  "sortino_ratio_metric": "Sortino Ratio",
  "drawdown_analysis_subheader": "Drawdown Analysis",
  "warning_drawdown_data_inconsistent": "Data inconsistent or empty, cannot plot drawdown curve.",
  "drawdown_legend": "Drawdown",
  "portfolio_drawdown_title": "Portfolio Drawdown",
  "drawdown_pct_axis": "Drawdown (%)",
  "returns_distribution_subheader": "Returns Distribution",
  "daily_returns_dist_legend": "Daily Returns Distribution",
  "daily_returns_dist_title": "Daily Return Rate Distribution",
  "daily_return_pct_axis": "Daily Return Rate (%)",
  "frequency_axis": "Frequency",
  "max_daily_return_metric": "Max Daily Return",
  "min_daily_return_metric": "Min Daily Return",
  "positive_return_days_metric": "Positive Return Days",
  "negative_return_days_metric": "Negative Return Days",

  "trade_analysis_subheader": "Trade Analysis",
  "no_completed_trades_for_analysis": "No completed trades available for metric analysis.",
  "raw_trade_records_subheader": "Raw Trade Records",
  "no_raw_trades_records": "No raw trade records available.",
  "trade_statistics_title": "Trade Statistics",
  "profit_loss_ratio_metric": "Profit/Loss Ratio",
  "na_value": "N/A",
  "profit_factor_metric": "Profit Factor",
  "largest_win_metric": "Largest Winning Trade",
  "largest_loss_metric": "Largest Losing Trade",
  "completed_trades_details_subheader": "Completed Trade Details",
  "col_completed_symbol": "Symbol",
  "col_completed_quantity": "Quantity",
  "col_completed_buy_price": "Buy Price",
  "col_completed_sell_price": "Sell Price",
  "col_completed_profit_loss": "P/L",
  "col_completed_profit_loss_pct": "P/L %",
  "col_completed_sell_time": "Sell Time",
  "no_completed_trades_to_display": "No completed trades to display.",
  "no_completed_trades_records": "No completed trade records.",
  "col_raw_time": "Time",
  "col_raw_stock": "Stock", 
  "col_raw_direction": "Direction",
  "col_raw_quantity": "Quantity",
  "col_raw_price": "Price",
  "col_raw_total_amount": "Total Amount",
  "no_raw_trades_to_display": "No raw trades to display.",

  "asset_allocation_analysis_subheader": "Asset Allocation Analysis",
  "invested_assets_label": "Invested Assets",
  "cash_vs_invested_title": "Cash vs. Invested Assets",
  "sector_distribution_subheader": "Sector Distribution",
  "stock_weight_subheader": "Stock Weight",
  "detailed_stock_weight_subheader": "Detailed Stock Weights",
  "empty_portfolio_for_allocation": "Portfolio is empty, cannot analyze asset allocation.",
  "other_stocks_label": "Others",
  "portfolio_sector_distribution_title": "Portfolio Sector Distribution",
  "portfolio_stock_distribution_title": "Portfolio Stock Distribution (Top 10)",
  "col_allocation_stock": "Stock",
  "col_allocation_market_value": "Market Value",
  "col_allocation_weight": "Weight (%)",
  "error_rendering_settings": "Error rendering settings UI.",
  "error_rendering_analysis_tab": "Error rendering analysis tab:",
  "error_rendering_alerts_tab": "Error rendering alerts tab:",
  "price_alert_system": "Price Alert System", 
  "no_portfolio_history_data": "No portfolio history data available for plotting.",
  "error_rendering_history_chart": "Could not render portfolio history chart.",
  "portfolio_value_label": "Portfolio Value",
  "portfolio_value_history_title": "Portfolio Value History",
  "net_value_label": "Net Value ($)",
  "recent_trend": "Recent Trend",
  "price_alert_system_header": "Price Alert System",
  "active_alerts_subheader": "Active Alerts",
  "col_alert_id": "ID",
  "col_alert_stock": "Stock",
  "col_alert_condition": "Condition",
  "col_alert_price": "Target Price",
  "col_alert_status": "Status",
  "col_alert_created_at": "Created At",
  "col_alert_trigger_count": "Triggers",
  "col_alert_latest_price": "Last Check Price",
  "alert_status_active": "Active",
  "alert_status_inactive": "Inactive",
  "alert_status_enabled": "Enabled",  
  "alert_status_disabled": "Disabled", 
  "no_active_alerts_to_display": "No active alerts to display.",
  "select_alert_to_toggle_label": "Select alert to toggle status:",
  "toggle_alert_status_button": "Toggle Status",
  "alert_status_updated_success": "Alert status updated successfully.",
  "select_alert_to_remove_label": "Select alert to remove:",
  "remove_alert_button": "Remove Alert",
  "alert_removed_success": "Alert removed successfully.",
  "no_active_alerts_info": "There are no active price alerts.",
  "create_new_alert_subheader": "Create New Alert",
  "stock_symbol_label": "Stock Symbol", 
  "condition_label": "Condition",
  "above": "Above",
  "below": "Below",
  "equal_to": "Equal To",
  "price_label": "Price",
  "new_alert_default_msg_template": "{symbol} price {condition} {price}",
  "alert_default_message": "{symbol} price alert: {condition} {price}", 
  "alert_message_label": "Alert Message",
  "add_alert_button": "Add Alert",
  "alert_added_success_msg": "Alert added successfully! ID: {id}",
  "error_invalid_symbol_or_price": "Please enter a valid stock symbol and price.",
  "alert_history_subheader": "Alert History",
  "col_hist_time": "Time",
  "col_hist_stock": "Stock",
  "col_hist_condition": "Condition",
  "col_hist_target_price": "Target Price",
  "col_hist_trigger_price": "Trigger Price",
  "col_hist_message": "Message",
  "clear_alert_history_button": "Clear History",
  "alert_history_cleared_success": "Alert history has been cleared.",
  "no_alert_history_info": "No alert history records found.",
  "system_configuration_header": "System Configuration",
  "trading_parameters_subheader": "Trading Parameters",
  "max_single_pos_ratio_label": "Max Single Position Ratio (%)",
  "max_drawdown_label": "Max Allowable Drawdown (%)",

  "api_keys_status_subheader": "API Keys (Status only, modify in .env file)",
  "api_key_configured": "Configured",
  "api_key_not_configured": "Not Configured",
  "save_settings_button": "Save Configuration Changes",
  "settings_saved_success": "Configuration saved! Some settings may require a restart to take full effect.",
  "error_rendering_settings": "Error rendering settings UI.", 


  "strategy_page_main_title": "📊 Strategy Trading",
  "tech_analysis_tab_title": "Technical Analysis Strategy",
  "ml_strategy_tab_title": "Machine Learning Strategies", 
  "backtest_tab_title": "Strategy Backtesting",
 
  "tech_analysis_driven_signals_subheader": "📈 Technical Analysis Driven Signals",

  "analyzing_tech_signal_spinner": "Applying {strategy_name} strategy for {symbol}...",
  "error_fetching_data_for_analysis": "Could not fetch sufficient data for {symbol} to perform analysis.",
  "error_analysis_failed": "Analysis failed: {reason}",

  "error_during_tech_analysis": "Error during technical analysis execution.",



  "error_stock_symbol_required": "Please enter a stock symbol.", 
  "backtesting_spinner": "Backtesting {strategy} for {symbol}...",
  "error_fetching_data_for_backtest": "Could not fetch data for {symbol} to perform backtest.",
  "backtest_completed_default": "Backtest completed!",
  "backtest_failed_ui": "Backtest failed: {error}",
  "unknown_error": "Unknown error", 
  "error_during_backtest": "Error during backtest execution.",

  "stock_symbol": "Stock Symbol", 
  "direction": "Direction",
  "buy": "Buy",               
  "sell": "Sell",            
  "quantity": "Quantity",       
  "order_type": "Order Type",
  "market_order": "Market Order",
  "limit_order": "Limit Order",
  "price": "Price",            
  "current_market_price": "Current Market Price:",
  "total_trade_amount": "Est. Total Trade Amount", 
  "warning_cannot_get_market_price_ui": "Could not fetch current market price. Market order will be executed at best available price or use a default if set.",
  "market_price_determined_on_execution": "Market Price (determined at execution)",
  "calculating": "Calculating...",
  "requires_limit_price": "Limit price required",
  "error_insufficient_funds_ui": "Insufficient funds! Estimated need ${needed:.2f}, Available ${available:.2f}",
  "error_insufficient_position_ui": "Insufficient position! Need {needed} shares, Have {available} shares",
  "error_limit_price_required_ui": "Limit order must have a specified price.",
  "warning_stock_symbol_required": "Please enter a stock symbol.",
  "execute_trade_button": "Execute Trade", 
  "error_cannot_submit_trade": "Cannot submit trade, please check form errors.",
  "trade_success_msg_ui": "Trade successful! {direction} {quantity} shares of {symbol} @ executed price ${price:.2f}",
  "trade_failed_msg_ui": "Trade failed: {message}",
  "current_holdings": "Current Holdings",
  "recent_trades": "Recent Trades",    


  "batch_trade_header": "Batch Trading",
  "batch_import_subheader": "Batch Import Trades",
  "csv_format_guide_expander": "CSV Format Guide",
  "csv_guide_columns": "CSV file should contain columns: symbol,quantity,price,direction,order_type",
  "csv_guide_symbol": "- symbol: Stock Symbol (e.g., AAPL)",
  "csv_guide_quantity": "- quantity: Quantity (positive integer)",
  "csv_guide_price": "- price: Price (positive number, leave empty or 0 for market order)",
  "csv_guide_direction": "- direction: Buy or Sell (or their translations)",
  "csv_guide_order_type": "- order_type: Market Order or Limit Order (or translations, optional, defaults to Market Order)",
  "upload_csv_uploader": "Upload CSV File",
  "preview_uploaded_orders": "Preview Uploaded Orders:",
  "execute_batch_trade_button": "Execute CSV Batch Trades",
  "batch_success_msg": "Successfully executed {count} trades.",
  "batch_failed_msg": "Failed {count} trades.",
  "batch_failed_details": "Failure Details:",
  "error_processing_csv": "Error processing CSV file: {error}",
  "no_valid_orders_in_csv": "No valid orders to execute in the CSV file.",
  "processing_batch_orders_spinner": "Processing batch orders...",
  "manual_batch_trade_subheader": "Manual Batch Trading",
  "manual_symbols_label": "Stock Symbols (one per line)",
  "manual_direction_label": "Trade Direction", 
  "manual_qty_per_stock_label": "Quantity per Stock",
  "manual_price_type_label": "Price Type",
  "manual_current_market_price_option": "Current Market Price",
  "manual_custom_price_option": "Custom Price",
  "manual_custom_price_label": "Custom Price (if selected)",
  "manual_create_batch_button": "Create & Execute Batch Trades",
  "manual_error_no_symbols": "Please enter at least one stock symbol.",
  "manual_warning_cannot_get_price_skip": "Cannot get market price for {symbol}, this stock will be skipped from batch order.",
  "manual_orders_preview": "Order Preview:",
  "manual_col_total_value": "Est. Total Value",
  "market_price_short": "Market", 
  "no_valid_manual_orders": "No valid orders to execute.",
  "one_click_closeout_subheader": "One-Click Closeout",
  "closeout_all_button": "Close All Positions",
  "closeout_profit_button": "Close Profitable Positions",
  "closeout_loss_button": "Close Losing Positions",
  "current_holdings_status_title": "Current Holdings Status",
  "no_valid_positions_to_display_batch": "No valid positions to display.",
  "no_current_positions_info": "Currently no open positions.",
  "no_positions_to_closeout_msg": "No eligible positions to close out.",
  "closeout_success_msg": "Successfully closed out {count} positions.",
  "closeout_failed_msg": "Failed to close out {count} positions.",
  "no_current_positions_info": "No current positions information available.",
  "strat_ma_crossover": "MA Crossover",
  "strat_rsi": "RSI",
  "strat_macd": "MACD",
  "strat_bollinger": "Bollinger Bands",
  "enter_new_model_option": "(Enter new model name)",
  "ml_training_in_progress_spinner": "Training model '{model_name}' (Data: {symbol}, {days} days)...",
  "ml_training_failed_ui": "Model training failed: {error}",
  "sharpe_ratio_metric": "Sharpe Ratio",
  "cash_label": "Cash",
  "enable_auto_trading_label": "Enable Auto Trading",
  "analyzing_tech_signal_spinner": "Analyzing technical signal for {symbol} using {strategy_name}...",
  "error_fetching_data_for_analysis": "Could not fetch sufficient data for {symbol} to perform analysis.",
  "error_analysis_failed": "Analysis failed: {reason}",
  "warning_ml_module_unavailable": "Machine Learning module (scikit-learn or MLStrategy) not fully loaded, functionality limited.",
  "info_install_sklearn": "Please try installing: pip install scikit-learn joblib",
  "error_config_model_list_missing": "System configuration error: Cannot find available model list.",
  "info_enter_new_model_name": "Please enter a name for the new model to proceed with training.",
  "loading_model_spinner": "Loading model '{model_name}'...",
  "error_loading_model_ui": "Failed to load model '{model_name}'. It might not exist or be corrupted. Check logs.",
  "model_loaded_success": "Model loaded: {model_name}",
  "warning_enter_new_model_name": "Please enter a name for the new model.",
  "warning_load_or_select_model_for_predict": "Please ensure model '{model_name}' is loaded or select a valid model for prediction.",
  "error_model_not_loaded_for_predict": "Model '{model_name}' not successfully loaded or initialized, cannot predict.",
  "error_cannot_predict_with_untrained_model": "Cannot predict with an untrained new model name. Please train first.",
  "ml_predicting_spinner": "Predicting {symbol} (using model: {model_name})...",
  "error_insufficient_data_for_predict": "Insufficient data for {symbol} ({count} rows) to perform feature engineering and prediction.",
  "predict_failed": "Prediction Failed",
  "direction_up": "Up",
  "direction_down_flat": "Down/Flat",
  "error_prediction_returned_empty": "Prediction returned an empty result.",
  "error_model_name_empty": "Model name cannot be empty.",
  "error_insufficient_training_data": "Insufficient training data ({count} rows). At least 100 rows required.",
  "ml_training_completed_default": "Model training completed!",
  "unknown_error": "Unknown error",
  "backtest_tab_title": "Strategy Backtest", 
  "error_stock_symbol_required": "Please enter a stock symbol.",
  "backtesting_spinner": "Backtesting {strategy} for {symbol}...",
  "error_fetching_data_for_backtest": "Could not fetch data for {symbol} to perform backtest.",
  "backtest_completed_default": "Backtest completed!",
  "backtest_failed_ui": "Backtest failed: {error}",
  "error_during_backtest": "Error during backtest execution.",
  "total_trades_count": "Total Trades Count",
  "backtest_completed_successfully": "Backtest completed successfully."
  ,"trade_quantity_tech": "Signal Trade Quantity:",
  "trade_quantity_tech_help": "Quantity to use when executing trade based on the signal below",
  "trade_quantity_ml": "ML Signal Trade Quantity:",
  "trade_quantity_ml_help": "Quantity to use when executing trade based on the ML prediction below",
  "ml_confidence_threshold_trade": "ML Trade Confidence Threshold:",
  "ml_confidence_threshold_trade_help": "ML prediction probability must meet this threshold to consider trading",
  "execute_buy_tech_signal": "Execute Buy ({symbol}) based on Tech Signal",
  "execute_sell_tech_signal": "Execute Sell ({symbol}) based on Tech Signal",
  "execute_buy_ml_signal": "Execute Buy ({symbol}) based on ML Prediction",
  "execute_sell_ml_signal": "Execute Sell ({symbol}) based on ML Prediction",
  "executing_trade_spinner": "Executing trade...",
  "error_cannot_get_price_for_trade": "Cannot get execution price.",
  "trade_executed_successfully": "Trade executed successfully!",
  "trade_execution_failed_msg": "Trade execution failed: {message}",
  "enable_auto_trade_for_strategy": "Enable automated trading for this signal",
  "enable_auto_trade_for_ml_strategy": "Enable automated trading for this ML prediction",
  "auto_trade_enabled_for_strategy": "Automated trading enabled for this strategy.",
  "auto_trade_disabled_for_strategy": "Automated trading disabled for this strategy.",
  "ml_view_feature_importance_trained": "View Feature Importance of Newly Trained Model"
  ,"error_batch_market_no_price": "Market order failed: Could not fetch market price.",
  "error_batch_market_no_system_ref": "Market order failed: No price source available (system_ref missing).",
  "error_batch_order_no_price": "Order failed: Price is missing.",
  "error_batch_invalid_price_type": "Order failed: Invalid price format.",
  "warning_csv_empty": "Uploaded CSV file is empty or invalid.",
  "warning_invalid_target_symbols_csv": "Specified target stock symbols are invalid. Will attempt to use 'symbol' column from CSV if present.",
  "error_csv_rule_missing_fields": "CSV row {idx} is missing required trading parameters (quantity/direction/price for limit order) or has incorrect format.",
  "error_csv_symbol_required_in_row": "CSV row {idx} is missing 'symbol' column, and no target stocks were specified in the UI.",
  "warning_no_valid_orders_to_execute_csv": "No valid orders could be constructed from the CSV file.",
  "batch_success_count": "Successfully executed {count} batch trades.",
  "batch_failed_count": "Failed to execute {count} batch trades.",
  "view_batch_failed_details": "View Failed Batch Trade Details",
  "no_positions_to_liquidate": "No eligible positions to liquidate.",
  "liquidating_positions_spinner": "Liquidating {count} positions...",
  "liquidation_success_count": "Successfully liquidated {count} positions.",
  "liquidation_failed_count": "Failed to liquidate {count} positions.",
  "view_liquidation_failed_details": "View Failed Liquidation Details",
  "batch_trading_header": "Batch Trading",
  "batch_import_from_csv": "Batch Import Trades via CSV",
  "batch_target_symbols_label_csv": "Target Stock Symbols (optional, comma-separated, applies to each CSV rule if filled):",
  "batch_target_symbols_help_csv": "If the CSV is a generic strategy template, enter symbols here. The 'symbol' column in CSV will be ignored or should not exist.",
  "csv_format_note_external_symbols": "Note: If symbols are specified above, the `symbol` column in the CSV (if present) will be ignored, or your CSV can omit it.",
  "info_applying_to_specified_symbols_csv": "CSV rules will be applied to specified symbols: {symbols_list}",
  "warning_csv_symbol_ignored_csv": "Warning: The 'symbol' column in the CSV will be ignored due to symbols specified above.",
  "manual_batch_trading_header": "Manual Batch Trading"
  ,"batch_trading_header": "Batch Trading",
  "batch_import_from_csv": "Batch Import Trades/Strategy Rules via CSV",
  "batch_target_symbols_label_csv": "Target Stock Symbols (comma-separated, applies to all CSV rules if filled):",
  "batch_target_symbols_help_csv_v2": "If CSV is a generic strategy template, enter symbols here. 'symbol' column in CSV will be ignored or shouldn't exist.",
  "batch_ui_trade_params_header": "Set Universal Trading Parameters for CSV Rules:",
  "batch_ui_default_quantity": "Default Quantity:",
  "batch_ui_default_quantity_help": "Used if quantity is not specified in a CSV row.",
  "batch_ui_default_direction": "Default Direction:",
  "batch_ui_default_direction_help": "Used if direction is not specified in a CSV row.",
  "batch_ui_default_order_type": "Default Order Type:",
  "batch_ui_default_order_type_help": "Used if order type is not specified in a CSV row.",
  "batch_ui_default_price_limit": "Default Limit Price (Optional):",
  "batch_ui_default_price_limit_help": "Used for Limit Orders from CSV if price is not specified there. Leave blank if not applicable.",
  "csv_format_core_rules_note": "CSV file primarily provides strategy rules/conditions. Trading parameters (quantity, direction, price, type) are optional; if not provided in CSV, default values from UI above will be used.",
  "preview_uploaded_rules": "Preview of Uploaded Rules/Orders:",
  "execute_csv_batch_button_v2": "Process CSV and Generate Trade Instructions",
  "info_applying_to_specified_symbols_csv": "CSV rules will be applied to specified symbols: {symbols_list}",
  "warning_csv_symbol_ignored_csv": "Warning: The 'symbol' column in the CSV will be ignored as target symbols are specified above.",
  "error_csv_and_ui_symbol_missing": "Error: CSV is missing 'symbol' column AND no target symbols specified in UI.",
  "error_no_symbol_for_csv_rule": "CSV rule {idx} has no symbol defined (neither in CSV nor UI).",
  "error_invalid_quantity_for_rule": "Quantity for CSV rule {idx} is invalid.",
  "error_invalid_limit_price_for_rule": "Limit order price for CSV rule {idx} is invalid.",
  "orders_to_be_executed_title": "The following orders will be generated for execution:",
  "confirm_execute_batch_orders_prompt": "Confirm execution of all orders listed above?",
  "manual_batch_trading_header": "Manual Batch Trading"
  ,"checkbox_confirm_csv_execution": "I have reviewed and confirm execution of these CSV-generated orders",
  "button_execute_confirmed_csv_batch": "Execute Confirmed CSV Batch Orders",
  "warning_must_confirm_csv_to_execute": "Please check the confirmation box to execute batch trades from CSV.",
  "hold": "Hold",
  "warning_no_data_available": "No historical data available for this stock.",
  "llm_news_analysis_header": "📰 LLM News Analysis (Gemini)",
  "company_name_for_llm": "Company Name (for precise search)",
  "select_gemini_model_label": "Select Gemini Model:",
  "run_llm_analysis_button": "Run Gemini News Analysis",
  "llm_analyzing_spinner": "Gemini is searching and analyzing news...",
  "llm_analysis_time_warning": "Please note: Gemini analysis may take 15-60 seconds. Please be patient.",
  "gemini_aggregated_sentiment": "Aggregated Sentiment Score",
  "gemini_key_summary": "Key Summary",
  "gemini_analyzed_articles": "View Analyzed News Sources",
  "llm_analysis_failed_error": "Gemini analysis failed or returned an empty result.",
  "llm_module_unavailable_warning": "Text analysis module (TextFeatureExtractor) could not be initialized. Please check Gemini API Key and relevant libraries.",
  "scan_progress_text": "Scan progress: {i}/{total} ({symbol})",
  "tech_analysis_tab": "📈 Technical Analysis Signal",
  "auto_trade_settings": "Automated Trading",
  "info_install_ml_libs": "Please try to install required libraries: pip install scikit-learn tensorflow joblib",
  "enable_llm_analysis_predict": "Combine with Gemini news analysis",
  "ml_predicting_spinner": "Predicting for {symbol} using model '{model_name}'...",
  "ml_predicting_spinner_combined": "Executing quantitative prediction & news analysis...",
  "quant_model_prediction": "Quantitative Model Prediction",
  "gemini_news_analysis": "Gemini News Analysis",
  "final_combined_decision": "Final Combined Decision",
  "ml_train_settings_label": "**Training Parameters**",
  "backtest_type_ml": "ML Quant Strategy (Alpha Driven)",
  "backtest_type_tech": "Traditional Technical Indicator Strategy",
  "backtest_type_label": "Select Backtest Type:",
  "ml_strategy_configuration": "**ML Strategy Configuration**",
  "select_ml_model_for_backtest": "Select ML Model for backtest:",
  "use_ml_for_alpha": "Use ML model for Alpha signal",
  "use_vol_veto": "Use volatility veto",
  "alpha_threshold": "Alpha Signal Threshold",
  "tech_strategy_configuration": "**Technical Strategy Configuration**",
  "backtesting_spinner_v2": "Backtesting {strategy_name} for {symbol}...",
  "equity_curve_and_trades": "Equity Curve & Trades",
  "drawdown": "Drawdown",
  "price_axis_label": "Price ($)",
  "equity_axis_label": "Portfolio Value ($)",
  "drawdown_axis_label": "Drawdown (%)",
  "strategy_equity": "Strategy Equity",
  "warning_no_data_for_backtest_chart": "No backtest history data to plot.",
  "enable_llm_analysis_backtest": "Incorporate Gemini news features in backtest",
  "llm_alpha_weight": "LLM Signal Weight",
  "llm_alpha_weight_help": "The weight of the LLM sentiment signal in the final Alpha decision.",
  "llm_backtest_feature_spinner": "Fetching and analyzing news features for the entire backtest period...",
  "error_backtest_invalid_data": "Backtest failed: Input data is invalid.",
  "incorporate_gemini_features": "Incorporate Gemini news features in backtest",
  "llm_signal_weight": "LLM Signal Weight",
  "alpha_signal_threshold": "Alpha Signal Threshold",
  "use_volatility_veto_checkbox": "Use volatility veto",
  "run_backtest_button": "Run Backtest",
  "fetching_data_for_backtest_info": "Fetching {days} days of data for backtest...",
  "preparing_features_info": "Preparing backtest data and calculating features...",
  "batch_predicting_info": "Using model '{model_name}' to perform batch predictions...",
  "backtest_completed_success": "Backtest completed, generated {trade_count} trades.",
  "backtest_performance_metrics_header": "Backtest Performance Metrics",
  "return_metrics_header": "Return Metrics",
  "risk_metrics_header": "Risk Metrics",
  "trade_metrics_header": "Trade Metrics",
  "alpha_distribution_header": "Alpha Signal Distribution",
  "alpha_distribution_subheader": "Model Alpha Distribution Chart",
  "alpha_distribution_help": "Observe the Alpha distribution to help determine if the threshold is reasonable.",
  "buy_threshold_label": "Buy Threshold",
  "sell_threshold_label": "Sell Threshold",
  "total_return_metric": "Total Return",
  "annual_return_metric": "Annual Return",
  "buy_and_hold_metric": "Buy & Hold",
  "sharpe_ratio_metric": "Sharpe Ratio",
  "max_drawdown_metric": "Max Drawdown",
  "volatility_metric": "Volatility (Annualized)",
  "calmar_ratio_metric": "Calmar Ratio",
  "total_trades_metric": "Total Trades",
  "signal_generation_header": "**Signal Generation**",
  "threshold_and_risk_header": "**Threshold & Risk Control**",
  "info_backtest_in_background": "Backtest is running in the background. You can browse other pages.",
  "clear_results_button": "Clear Results",
  "clear_error_button": "Clear Error",
  "return_metrics_header": "Return Metrics",
  "risk_metrics_header": "Risk Metrics",
  "trade_metrics_header": "Trade Metrics",
  "total_return_metric": "Total Return",
  "annual_return_metric": "Annual Return",
  "buy_and_hold_metric": "Buy & Hold",
  "sharpe_ratio_metric": "Sharpe Ratio",
  "max_drawdown_metric": "Max Drawdown",
  "volatility_metric": "Volatility (Annual.)",
  "calmar_ratio_metric": "Calmar Ratio",
  "total_trades_metric": "Total Trades",
  "win_rate_metric": "Win Rate",
  "pl_ratio_metric": "P/L Ratio",
  "alpha_distribution_header": "Alpha Signal Distribution",
  "alpha_distribution_subheader": "Model Alpha Distribution Chart",
  "alpha_distribution_help": "Observe the Alpha distribution to help determine if the threshold is reasonable.",
  "buy_threshold_label": "Buy Threshold",
  "sell_threshold_label": "Sell Threshold",
  "equity_curve_and_trades": "Equity Curve & Trades",
  "info_training_in_background": "Model is training in the background. You can browse other pages or perform predictions.",
  "fetching_data_for_training_spinner": "Fetching training data...",
  "ml_training_in_progress_spinner_message": "Model '{model_name}' is now training, please wait...",
  "final_decision_and_auto_trade": "Final Decision & Automation",
  "trade_quantity_ml": "Trade Quantity",
  "ml_confidence_threshold_trade": "Confidence Threshold for Trade",
  "enable_auto_trade_for_ml_strategy": "Enable automated trading for this ML strategy",
  "ml_auto_trade_settings": "Automated Trading Parameters",
  "log_init_text_feature_extractor": "Initializing TextFeatureExtractor within MLStrategy...",
  "log_text_feature_extractor_available": "TextFeatureExtractor initialized successfully and IS AVAILABLE.",
  "log_text_feature_extractor_not_available": "TextFeatureExtractor initialized, but IS NOT AVAILABLE. Check Gemini Key/Library.",
  "log_skip_text_feature_extractor_init": "Skipping TextFeatureExtractor init. TEXT_EXTRACTOR_AVAILABLE={is_available}, self.data_manager is not None={has_dm}",
  "log_get_model_type_from_name": "Getting model type from name: {model_name}",
  "log_train_start": "Starting training for {model_type} model: {model_name}",
  "log_train_raw_data_shape": "Original training data shape: {shape}",
  "log_train_features_prepared_shape": "Data shape after feature preparation: {shape}",
  "log_train_unknown_model_type": "Unknown model type '{model_type}'.",
  "log_train_process_failed": "Training process failed: {error}",
  "log_dl_train_start_info": "Starting training {model_type} model: {model_name}...",
  "log_dl_train_insufficient_data_cleaned": "Insufficient data after cleanup ({count} rows), cannot train.",
  "log_dl_train_insufficient_data_lookback": "Insufficient data ({count} rows) after cleanup for lookback period ({lookback}).",
  "log_dl_train_empty_samples_reshaped": "Reshaped training samples are empty, check lookback setting.",
  "log_dl_train_error": "Error during {model_type} model training: {error}",
  "log_sklearn_train_start_info": "Starting training RandomForest model: {model_name}...",
  "log_sklearn_cleaned_data_shape": "Sklearn: Cleaned data for training: {count} rows.",
  "log_sklearn_insufficient_data": "Feature preparation failed or insufficient data ({count} rows).",
  "log_sklearn_single_class_error": "Training or test set contains only a single class.",
  "log_sklearn_train_error": "Error during RandomForest model training: {error}",
  "log_predict_dispatch": "Dispatching prediction for model type: {model_type}",
  "log_predict_handler_mismatch": "Model type '{model_type}' does not match the handler.",
  "log_predict_sklearn_error": "Error during RandomForest prediction: {error}",
  "log_predict_dl_error": "Error during {model_type} prediction: {error}",
  "log_predict_dl_scaler_info": "Scaler expected {count} features.",
  "log_batch_predict_start": "Starting batch prediction for {symbol} ({count} rows of data)...",
  "log_batch_predict_model_type": "Using model type: {model_type}",
  "log_batch_predict_unsupported_type": "Unsupported model type for batch prediction: {model_type}",
  "log_batch_predict_failed": "Batch prediction failed: {error}",
  "log_batch_predict_dl_scaler_load_fail": "Could not load scaler: {path}",
  "log_batch_predict_dl_scaler_no_names": "Scaler does not have feature_names_in_, falling back to full feature config.",
  "log_batch_predict_dl_missing_features_calc": "Need to calculate missing technical features: {features}",
  "log_batch_predict_dl_feature_calc_fail": "Failed to calculate technical features: {error}",
  "log_batch_predict_dl_missing_features_final": "FATAL: Still missing required feature columns after calculation: {features}",
  "log_batch_predict_dl_invalid_data_length": "Insufficient data length after cleaning: {count} < {lookback}",
  "log_batch_predict_dl_no_sequences": "Could not create any valid sequences from the data.",
  "log_batch_predict_dl_sequence_shape": "Sequence data shape for prediction: {shape}",
  "log_batch_predict_dl_execution_fail": "Batch prediction execution failed: {error}",
  "log_batch_predict_dl_completed": "Batch prediction completed, returning {count} predictions.",
  "log_batch_predict_sklearn_missing_features": "Missing required features for Sklearn batch prediction: {features}",
  "log_save_sklearn_fail_reason": "Cannot save Sklearn model: Handler, filename, model, or scaler is missing.",
  "log_save_sklearn_success": "Sklearn model '{model_name}' and Scaler saved.",
  "log_save_sklearn_fail": "Failed to save Sklearn model: {error}",
  "log_feature_prep_start": "=== Starting feature preparation for {symbol} ===",
  "log_feature_prep_input_shape": "Input data shape: {shape}",
  "log_feature_prep_input_cols": "Input columns: {columns}",
  "log_feature_prep_std_cols": "Standardized columns: {columns}",
  "log_feature_prep_missing_raw_cols": "Missing required raw columns after lowercasing: {columns}",
  "log_feature_prep_date_range": "Data date range: {start} to {end}",
  "log_feature_prep_close_stats": "Close column stats: min={min:.2f}, max={max:.2f}, mean={mean:.2f}",
  "log_feature_prep_existing_tech": "Detected existing technical indicators: {indicators}",
  "log_feature_prep_calc_tech": "No technical indicators detected, calculation required.",
  "log_feature_prep_tech_start": "Starting technical indicator calculation...",
  "log_feature_prep_tech_fail": "Technical indicator calculation failed: {error}",
  "log_feature_prep_tech_complete": "Technical indicator calculation complete, new column count: {count}",
  "log_feature_prep_new_cols": "New columns added: {columns}",
  "log_feature_prep_col_map_start": "Starting column name mapping...",
  "log_feature_prep_col_map_debug": "Mapping: {tech_name} -> {config_name}",
  "log_feature_prep_calc_enhanced": "Calculating enhanced features...",
  "log_feature_prep_calc_mom20": "Calculated mom_20",
  "log_feature_prep_calc_mom60": "Calculated mom_60",
  "log_feature_prep_calc_vol20": "Calculated vol_20",
  "log_feature_prep_calc_vol60": "Calculated vol_60",
  "log_feature_prep_calc_vol_chg5": "Calculated vol_chg_5",
  "log_feature_prep_vol_invalid": "Volume column invalid, vol_chg_5 set to 1.0",
  "log_feature_prep_init_text_cols": "Initializing text feature columns...",
  "log_feature_prep_init_text_debug": "Initialized text feature: {col} = 0.0",
  "log_feature_prep_attempt_text": "TextFeatureExtractor is available, attempting to get text features for {symbol}...",
  "log_feature_prep_text_success": "Successfully retrieved text features, shape: {shape}",
  "log_feature_prep_merge_text_success": "Successfully merged {count} text feature columns: {columns}",
  "log_feature_prep_text_no_cols": "No expected columns found in the text feature DataFrame.",
  "log_feature_prep_text_empty": "Text feature retrieval returned an empty result.",
  "log_feature_prep_text_fail": "Error during text feature retrieval: {error}",
  "log_feature_prep_text_continue_default": "Will continue using default text feature values.",
  "log_feature_prep_text_unavailable": "TextFeatureExtractor unavailable, skipping text feature retrieval.",
  "log_feature_prep_text_merge_final": "Final text columns added: {columns}",
  "log_feature_prep_add_missing_text": "Added missing text feature column: {col}",
  "log_feature_prep_fill_nan_text": "Filled NaN values in text feature column: {col}",
  "log_feature_prep_text_success_final": "✅ Text features obtained successfully",
  "log_feature_prep_text_default_final": "⚠️ Using default text feature values (all zeros)",
  "log_feature_prep_cleanup_start": "Starting data cleanup...",
  "log_feature_prep_cleanup_shape_before": "Shape before cleanup: {shape}",
  "log_feature_prep_inf_replaced": "Replaced {count} infinite values.",
  "log_feature_prep_final_selection": "Final column selection...",
  "log_feature_prep_required_features": "Required features: {features}",
  "log_feature_prep_missing_features": "Missing features after preparation: {features}",
  "log_feature_prep_fill_missing_feature": "Filled missing feature with default value: {feature}",
  "log_feature_prep_close_missing_fatal": "FATAL: 'close' column is missing, cannot proceed.",
  "log_feature_prep_final_shape": "Final data shape: {shape}",
  "log_feature_prep_final_cols": "Final columns: {columns}",
  "log_feature_prep_final_df_empty": "FATAL: Final DataFrame is empty!",
  "log_feature_prep_final_nan_check": "Final data still contains null values: {null_counts}",
  "log_feature_prep_final_zero_col": "Column {col} is all zeros.",
  "log_feature_prep_final_nan_col": "Column {col} is all NaN.",
  "log_feature_prep_end": "=== Feature preparation finished ===",
  "log_feature_prep_exception": "Exception occurred during feature preparation: {error}"
}